name: Backend (API, Lambda and DynamoDB)

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_BACKEND_BUCKET: ${{ secrets.TERRAFORM_BACKEND_BUCKET }}
  TERRAFORM_BACKEND_KEY: global/s3/terraform.tfstate
  TERRAFORM_BACKEND_DYNAMODB_TABLE: ${{ secrets.TERRAFORM_BACKEND_DYNAMODB_TABLE }}
  TERRAFORM_BACKEND_REGION: us-west-2

jobs:
  test:
    name: unittest-backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@main

      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: python lambda-function/test_visit_counter.py

  deploy:
    name: aws-deployment
    runs-on: ubuntu-latest
    needs: test  # Wait for the 'test' job to complete

    defaults:
      run: 
        working-directory: ./terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@main

      - name: Print Working Directory
        run: pwd

      - name: List Files
        run: ls

      - name: Set up Terraform backend configuration
        run: |
          echo 'terraform {' > backend.tf
          echo '  backend "s3" {' >> backend.tf
          echo "    bucket = \"$TERRAFORM_BACKEND_BUCKET\"" >> backend.tf
          echo "    key = \"$TERRAFORM_BACKEND_KEY\"" >> backend.tf
          echo "    dynamodb_table = \"$TERRAFORM_BACKEND_DYNAMODB_TABLE\"" >> backend.tf
          echo "    region = \"$TERRAFORM_BACKEND_REGION\"" >> backend.tf
          echo "    encrypt = true" >> backend.tf
          echo '  }' >> backend.tf
          echo '}' >> backend.tf

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
    
      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply --auto-approve
